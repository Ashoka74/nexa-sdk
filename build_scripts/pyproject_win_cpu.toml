[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nexaai"
version = "0.0.0.dev"
description = "Nexa AI SDK"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Nexa AI", email = "octopus@nexa4ai.com" }]
dependencies = [
    "typing-extensions>=4.5.0",
    "numpy>=1.20.0",
    "diskcache>=5.6.1",
    "jinja2>=2.11.3",
    "librosa>=0.8.0",
    "boto3>=1.34.148",
    "botocore>=1.34.148",
    "fastapi",
    "uvicorn",
    "sse-starlette",
    "pydantic-settings",
    "diskcache",
    "starlette_context",
    "pillow",
    "streamlit",
    "tqdm",
    "tabulate",
    "prompt_toolkit"
]
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
onnx = [
    "librosa",
    "optimum[onnxruntime] >=1.7.3", # for cpu version
    "diffusers", # required for image generation
    "optuna",
    "pydantic",
    "PyYAML",
    "Requests",
    "setuptools",
    "soundfile",
    "streamlit_audiorec",
    "transformers",
    "ttstokenizer",
]

[project.urls]
Homepage = "https://github.com/NexaAI/nexa-sdk"
Issues = "https://github.com/NexaAI/nexa-sdk/issues"

[project.scripts]
nexa-cli = "nexa.cli.entry:main"

[tool.setuptools]
packages = [
    "nexa",
    "nexa.cli",
    "nexa.gguf",
    "nexa.gguf.llama",
    "nexa.gguf.sd",
    "nexa.gguf.streamlit",
    "nexa.gguf.server",
    "nexa.onnx",
    "nexa.onnx.streamlit",
    "nexa.onnx.server"
]

[tool.setuptools.package-data]
"nexa" = ["gguf/_libs/cpu/*.dll"]

[tool.pytest.ini_options]
testpaths = "tests"
